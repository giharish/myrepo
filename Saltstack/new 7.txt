salt-this-machine:
  ssh_host: 12.34.56.78
  ssh_username: root
  key_filename: '/etc/salt/mysshkey.pem'
  provider: my-saltify-config
  
  
  File Management:
  mkdir /srv/salt/files
  Create file in /srv/salt/*.sls
  /etc/nginx/nginx.conf:
  file.managed:
    - source:
      - salt://files/nginx.conf
    - makedirs: True

  On /srv/salt, create top file top.sls
  base:
  '*':
    - nginx_conf
  
  salt '*' state.apply
  
  Beacon Config:
  1. Create the statefile for packages to be installed:
  python-pip:
    pkg.installed

  pyinotify:
    pip.installed:
      - require:
        - pkg: python-pip
		
  mkdir /srv/salt/files/minion.d
  
  /etc/salt/minion.d/beacons.conf
  beacons:
  inotify:
    - files:
        /etc/nginx/nginx.conf:
          mask:
            - modify
    - disable_during_state_run: True
	

Sysctl Parameters Linux State File:
change_sysctl_parameters:
     sysctl.present:
           - name: net.ipv4.ip_forward
           - value: 0
           - name: net.ipv4.conf.all.send_redirects
           - value: 0
           - name: net.ipv4.conf.default.send_redirects
           - value: 0
           - name: net.ipv4.route.flush
           - value: 1
           - name: net.ipv4.conf.all_source_route
           - value: 0
           - name: net.ipv4.icmp_echo_ignore_broadcasts
           - value: 1
           - name: net.ipv4.icmp_ignore_bogus_error_responses
           - value: 1
           - name: net.ipv4.tcp_syncookies
           - value: 0
		   
SSH State:
/etc/ssh/sshd_config:
  file.managed:
    - source:
      - salt://files/sshd_config
	  - user: root
      - group: root
      - mode: 644
    - makedirs: True
/etc/ssh/banner:
  file.managed:
    - source:
      - salt://files/banner
    - makedirs: True
sshd:
  service.running:
    - reload: True
    - watch:
      - file: /etc/ssh/sshd_config

python-pip:
    pkg.installed

  pyinotify:
    pip.installed:
      - require:
        - pkg: python-pip		

  
/etc/salt/minion.d/beacons.conf
  beacons:
  inotify:
    - files:
        /etc/ssh/sshd_config:
          mask:
            - modify
    - disable_during_state_run: True

Create the file reactor.sls
revert-file:
  local.state.apply:
    - tgt: {{ data['id'] }}
    - arg:
      - manipaldemo_sshconfig
	  
On the master create a state file to maintain the file in /srv/salt/maintain_important_file.sls
important_file:
  file.managed:
    - name: /etc/important_file
    - contents: |
        important_config: True

On the master configure the reactor to reack to events (/etc/salt/master.d/reactor.conf)		
reactor:
  - salt/beacon/*/inotify//etc/important_file:
    - /srv/reactor/revert.sls

        