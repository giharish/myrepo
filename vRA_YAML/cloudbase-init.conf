[DEFAULT]
username=Administrator
group=Administrators
first_logon_behaviour=always
bsdtar_path=C:\Program Files\Cloudbase Solutions\Cloudbase-Init\bin\bsdtar.exe
mtools_path=C:\Program Files\Cloudbase Solutions\Cloudbase-Init\bin\
verbose=false
debug=true
logdir=C:\Program Files\Cloudbase Solutions\Cloudbase-Init\log\
logfile=cloudbase-init.log
default_log_levels=comtypes=INFO,suds=INFO,iso8601=WARN,requests=WARN
local_scripts_path=C:\Program Files\Cloudbase Solutions\Cloudbase-Init\LocalScripts\
metadata_services=cloudbaseinit.metadata.services.ec2service.EC2Service
plugins=cloudbaseinit.plugins.common.userdata.UserDataPlugin,cloudbaseinit.plugins.common.sethostname.SetHostNamePlugin,cloudbaseinit.plugin.windows.createuser.CreateUserPlugin,cloudinit.plugin.common.setuserpassword.SetUserPasswordPlugin
allow_reboot=true

ami-022d7d3bd61b993d6
C*a%6C.GcA!h4F@uMWB&GvuYRAIKxvXP
Content-Type: text/x-shellscript; charset="us-ascii"
        MIME-Version: 1.0
        Content-Transfer-Encoding: 7bit
        Content-Disposition: attachment; filename="doPsStuff.ps1"
        #ps1_sysnative
        Start-Transcript -Append C:\PS\Logs\AD-Join.log
        Invoke-Expression -Command C:\SQL2019\service.bat
        $localcred=ConvertTo-SecureString -String "${input.dbpass}" -AsPlainText -Force
        Set-LocalUser -Name Administrator -Password $localcred
        $creds = New-Object System.Management.Automation.PSCredential "${secret.username}",(ConvertTo-SecureString -String "${secret.password}" -AsPlainText -Force)
        Add-Computer -domainName ${input.domain} -Credential $creds -Restart
        sleep 120
        --===123456789
        Content-Type: text/x-shellscript; charset="us-ascii"
        MIME-Version: 1.0
        Content-Transfer-Encoding: 7bit
        Content-Disposition: attachment; filename="sqlinstall.ps1"
        #ps1_sysnative
        Start-Transcript -Append C:\PS\Logs\SQL-Install.log
        Write-Host Disable Firewall
        Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
        Write-Host "Starting Microsoft SQL 2019 Installation"
        #$dbcreds = New-Object System.Management.Automation.PSCredential "Administrator",(ConvertTo-SecureString -String "VMware1!" -AsPlainText -Force)
        Start-Process -FilePath C:\SQL2019\SQL2019\SETUP.EXE -Args "/ACTION=INSTALL /IACCEPTSQLSERVERLICENSETERMS /QUIET /FEATURES=SQL,Tools /INSTANCENAME=${input.dbinstance} /SAPWD=${input.dbpass} /SECURITYMODE=SQL /TCPENABLED=1" -Verb RunAs -Wait
        Write-Host "Installing Azure Data Studio"
        Start-Process -FilePath C:\SQL2019\SSMS-Setup-ENU.exe -Args "/QUIET" -Verb RunAs -Wait
        Remove-Item C:\SQL2019 -Recurse
        Restart-Computer
		

1.Connect to your Windows instance and customize it.
2.Search for and run the EC2LaunchSettings application if the windows is 2016 or later or if the windows server 2012 R2 and earlier version of Windows server 2012R2 open EC2Config service application.
3.Enable Random(Retrieve from console)
4.Click Shutdown the system with Sysprep option.
5.Create AMI once instance got shutdown.
6. Then launch the system using new Keypair.